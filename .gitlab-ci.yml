variables:
  # This will supress any download for dependencies and plugins or upload messages which would clutter the console log.
  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: "-Dhttps.protocols=TLSv1.2 -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"
  # As of Maven 3.3.0 instead of this you may define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
cache:
  paths:
    - .m2/repository



stages:
  - build
  # - test
  - build-docker



build-nginx-docker:
  stage: build-docker
  needs: []
  before_script:
    - cd nginx-config
    - export VERSION=$(cat version.txt)
    - docker login -u martenls -p $DOCKER_REGISTRY_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY/martenls/bachelor-thesis-code/nginx-openbot:$VERSION -t $CI_REGISTRY/martenls/bachelor-thesis-code/nginx-openbot .
    - docker push $CI_REGISTRY/martenls/bachelor-thesis-code/nginx-openbot
    - docker push $CI_REGISTRY/martenls/bachelor-thesis-code/nginx-openbot:$VERSION
  after_script:
    - docker logout $CI_REGISTRY
  tags:
    - shared
  only:
    changes:
      - nginx-config/version.txt

# build-twitter-docker:
#   stage: build-docker
#   before_script:
#     - cd sninterface-twitter
#     - export VERSION=$(cat version.txt)
#     - docker login -u martenls -p $DOCKER_REGISTRY_TOKEN $CI_REGISTRY
#   script:
#     - docker build -t $CI_REGISTRY/martenls/bachelor-thesis-code/sninterface-twitter:$VERSION -t $CI_REGISTRY/martenls/bachelor-thesis-code/sninterface-twitter .
#     - docker push $CI_REGISTRY/martenls/bachelor-thesis-code/sninterface-twitter
#     - docker push $CI_REGISTRY/martenls/bachelor-thesis-code/sninterface-twitter:$VERSION
#   after_script:
#     - docker logout $CI_REGISTRY
#   tags:
#     - shared
#   only:
#     changes:
#       - sninterface-twitter/version.txt


build-qasystem:
  stage: build
  image: maven:3-openjdk-11
  before_script:
    - cd dcat-qa-system
  script:
    - mvn $MAVEN_CLI_OPTS -DskipTests package
  artifacts:
    paths:
      - dcat-qa-system/target/dcat-qa-system-0.0.1-SNAPSHOT.jar
  tags:
    - shared


test-qasystem:
  stage: test
  image: maven:3-openjdk-11
  services:
    - name: elasticsearch:7.7.0
      alias: es
      command: [ "bin/elasticsearch", "-Ediscovery.type=single-node" ]
  before_script:
    - cd dcat-qa-system
  script:
    - mvn $MAVEN_CLI_OPTS -Des.host=es -Des.port=9200 org.jacoco:jacoco-maven-plugin:0.8.5:prepare-agent test org.jacoco:jacoco-maven-plugin:0.8.5:report
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/",instructions, "instructions covered"; print 100*covered/instructions, "%covered" }' target/site/jacoco/jacoco.csv
  artifacts:
    paths:
      - dcat-qa-system/target/dcat-qa-system-0.0.1-SNAPSHOT.jar
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
  coverage: '/Code coverage: \d+.\d+ \% covered/'
  tags:
    - openbot


build-qasystem-docker:
  stage: build-docker
  needs:
    - job: test-qasystem
      artifacts: true
  before_script:
    - cd dcat-qa-system
    - export VERSION=$(cat version.txt)
    - docker login -u martenls -p $DOCKER_REGISTRY_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY/martenls/bachelor-thesis-code/qa-system:$VERSION -t $CI_REGISTRY/martenls/bachelor-thesis-code/qa-system .
    - docker push $CI_REGISTRY/martenls/bachelor-thesis-code/qa-system
    - docker push $CI_REGISTRY/martenls/bachelor-thesis-code/qa-system:$VERSION
  after_script:
    - docker logout $CI_REGISTRY
  tags:
    - shared
  only:
    changes:
      - dcat-qa-system/version.txt

build-sninterface-botkit-twitter-docker:
  stage: build-docker
  needs: []
  before_script:
    - cd sninterface-botkit/twitter-bot
    - export VERSION=$(cat version.txt)
    - docker login -u martenls -p $DOCKER_REGISTRY_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY/martenls/bachelor-thesis-code/sninterface-botkit-twitter:$VERSION -t $CI_REGISTRY/martenls/bachelor-thesis-code/sninterface-botkit-twitter  .
    - docker push $CI_REGISTRY/martenls/bachelor-thesis-code/sninterface-botkit-twitter
    - docker push $CI_REGISTRY/martenls/bachelor-thesis-code/sninterface-botkit-twitter:$VERSION
  after_script:
    - docker logout $CI_REGISTRY
  tags:
    - shared
  only:
    changes:
      - sninterface-botkit/twitter-bot/version.txt

build-sninterface-botkit-web-docker:
  stage: build-docker
  needs: []
  before_script:
    - cd sninterface-botkit/web-bot
    - export VERSION=$(cat version.txt)
    - docker login -u martenls -p $DOCKER_REGISTRY_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY/martenls/bachelor-thesis-code/sninterface-botkit-web:$VERSION -t $CI_REGISTRY/martenls/bachelor-thesis-code/sninterface-botkit-web  .
    - docker push $CI_REGISTRY/martenls/bachelor-thesis-code/sninterface-botkit-web
    - docker push $CI_REGISTRY/martenls/bachelor-thesis-code/sninterface-botkit-web:$VERSION
  after_script:
    - docker logout $CI_REGISTRY
  tags:
    - shared
  only:
    changes:
      - sninterface-botkit/web-bot/version.txt